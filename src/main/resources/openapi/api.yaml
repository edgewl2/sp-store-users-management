openapi: 3.1.0
info:
  title: API de Gestión de Usuarios
  description: |
    API para la gestión de usuarios que permite el registro, autenticación, 
    actualización de perfil y recuperación de contraseña.
  contact:
    name: Edvin Gerardo Aguirre Hernández
    email: edgewl2@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Servidor local de desarrollo

tags:
  - name: Usuarios
    description: Operaciones relacionadas con usuarios
  - name: Direcciones
    description: Operaciones relacionadas con direcciones de envío
  - name: Teléfonos
    description: Operaciones relacionadas con números de teléfono
  - name: Roles
    description: Operaciones relacionadas con roles y permisos
  - name: Autenticación
    description: Operaciones relacionadas con la autenticación
  - name: Administración
    description: Operaciones administrativas

paths:
  /api/v1/users:
    get:
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados. Solo accesible por administradores.
      tags:
        - Usuarios
        - Administración
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      summary: Registrar un nuevo usuario
      description: |
        Crea un nuevo usuario en el sistema. Todos los campos son obligatorios.
        Se valida que el usuario sea mayor de 18 años y que el correo electrónico tenga un formato válido.
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/users/{id}:
    get:
      summary: Obtener un usuario por ID
      description: Retorna los detalles de un usuario específico. Accesible por el propio usuario o por administradores.
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a obtener
      responses:
        '200':
          description: Usuario obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Actualizar un usuario
      description: Actualiza los datos de un usuario específico. Accesible por el propio usuario o por administradores.
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Eliminar un usuario
      description: Elimina un usuario específico. Solo accesible por administradores.
      tags:
        - Usuarios
        - Administración
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a eliminar
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/users/{id}/password:
    put:
      summary: Cambiar contraseña
      description: Permite a un usuario cambiar su contraseña. Requiere la contraseña actual.
      tags:
        - Usuarios
        - Autenticación
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario que cambia su contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Contraseña cambiada exitosamente
        '400':
          description: Datos de entrada inválidos o contraseña actual incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/users/{id}/addresses:
    get:
      summary: Obtener direcciones de un usuario
      description: Retorna todas las direcciones de un usuario específico.
      tags:
        - Usuarios
        - Direcciones
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Direcciones obtenidas exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Agregar dirección a un usuario
      description: Agrega una nueva dirección a un usuario específico.
      tags:
        - Usuarios
        - Direcciones
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        '201':
          description: Dirección agregada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/users/{userId}/addresses/{addressId}:
    put:
      summary: Actualizar dirección
      description: Actualiza una dirección específica de un usuario.
      tags:
        - Usuarios
        - Direcciones
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
        - name: addressId
          in: path
          required: true
          schema:
            type: string
          description: ID de la dirección
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        '200':
          description: Dirección actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Eliminar dirección
      description: Elimina una dirección específica de un usuario.
      tags:
        - Usuarios
        - Direcciones
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
        - name: addressId
          in: path
          required: true
          schema:
            type: string
          description: ID de la dirección
      responses:
        '204':
          description: Dirección eliminada exitosamente
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/users/{id}/phones:
    get:
      summary: Obtener números de teléfono de un usuario
      description: Retorna todos los números de teléfono de un usuario específico.
      tags:
        - Usuarios
        - Teléfonos
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Números de teléfono obtenidos exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhoneResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Agregar número de teléfono a un usuario
      description: Agrega un nuevo número de teléfono a un usuario específico.
      tags:
        - Usuarios
        - Teléfonos
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneRequest'
      responses:
        '201':
          description: Número de teléfono agregado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/users/{userId}/phones/{phoneId}:
    put:
      summary: Actualizar número de teléfono
      description: Actualiza un número de teléfono específico de un usuario.
      tags:
        - Usuarios
        - Teléfonos
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
        - name: phoneId
          in: path
          required: true
          schema:
            type: string
          description: ID del número de teléfono
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneRequest'
      responses:
        '200':
          description: Número de teléfono actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Eliminar número de teléfono
      description: Elimina un número de teléfono específico de un usuario.
      tags:
        - Usuarios
        - Teléfonos
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
        - name: phoneId
          in: path
          required: true
          schema:
            type: string
          description: ID del número de teléfono
      responses:
        '204':
          description: Número de teléfono eliminado exitosamente
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/roles:
    get:
      summary: Obtener todos los roles
      description: Retorna una lista de todos los roles disponibles. Solo accesible por administradores.
      tags:
        - Roles
        - Administración
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de roles obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      summary: Crear un nuevo rol
      description: Crea un nuevo rol en el sistema. Solo accesible por administradores.
      tags:
        - Roles
        - Administración
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
      responses:
        '201':
          description: Rol creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/roles/{id}:
    get:
      summary: Obtener un rol por ID
      description: Retorna los detalles de un rol específico. Solo accesible por administradores.
      tags:
        - Roles
        - Administración
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del rol a obtener
      responses:
        '200':
          description: Rol obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Actualizar un rol
      description: Actualiza los datos de un rol específico. Solo accesible por administradores.
      tags:
        - Roles
        - Administración
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del rol a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
      responses:
        '200':
          description: Rol actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Eliminar un rol
      description: Elimina un rol específico. Solo accesible por administradores.
      tags:
        - Roles
        - Administración
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del rol a eliminar
      responses:
        '204':
          description: Rol eliminado exitosamente
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/users/{userId}/roles:
    get:
      summary: Obtener roles de un usuario
      description: Retorna todos los roles asignados a un usuario específico.
      tags:
        - Usuarios
        - Roles
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Roles obtenidos exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Asignar rol a un usuario
      description: Asigna un rol a un usuario específico. Solo accesible por administradores.
      tags:
        - Usuarios
        - Roles
        - Administración
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleId
              properties:
                roleId:
                  type: string
                  description: ID del rol a asignar
                  example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Rol asignado exitosamente
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/users/{userId}/roles/{roleId}:
    delete:
      summary: Eliminar rol de un usuario
      description: Elimina un rol asignado a un usuario específico. Solo accesible por administradores.
      tags:
        - Usuarios
        - Roles
        - Administración
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
        - name: roleId
          in: path
          required: true
          schema:
            type: string
          description: ID del rol a eliminar
      responses:
        '204':
          description: Rol eliminado exitosamente
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/password/reset:
    post:
      summary: Solicitar restablecimiento de contraseña
      description: |
        Inicia el proceso de restablecimiento de contraseña enviando un correo electrónico 
        con un enlace que contiene un token de restablecimiento.
      tags:
        - Usuarios
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200':
          description: Solicitud de restablecimiento procesada exitosamente
        '404':
          description: Correo electrónico no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/password/reset/confirm:
    post:
      summary: Confirmar restablecimiento de contraseña
      description: |
        Completa el proceso de restablecimiento de contraseña utilizando el token 
        enviado por correo electrónico y estableciendo una nueva contraseña.
      tags:
        - Usuarios
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
      responses:
        '200':
          description: Contraseña restablecida exitosamente
        '400':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - username
        - password
        - email
        - firstName
        - lastName
        - birthDate
      properties:
        username:
          type: string
          description: Nombre de usuario único
          example: "usuario123"
          minLength: 3
          maxLength: 50
        password:
          type: string
          description: Contraseña del usuario
          format: password
          example: "Contraseña123!"
          minLength: 8
        email:
          type: string
          description: Correo electrónico del usuario
          format: email
          example: "usuario@ejemplo.com"
        firstName:
          type: string
          description: Nombre del usuario
          example: "Juan"
        lastName:
          type: string
          description: Apellidos del usuario
          example: "Pérez García"
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento (debe ser mayor de 18 años)
          example: "1990-01-01"
        address:
          $ref: '#/components/schemas/AddressRequest'
        phoneNumber:
          $ref: '#/components/schemas/PhoneRequest'

    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Correo electrónico del usuario
          format: email
          example: "nuevo.email@ejemplo.com"
        firstName:
          type: string
          description: Nombre del usuario
          example: "Juan Carlos"
        lastName:
          type: string
          description: Apellidos del usuario
          example: "Pérez Rodríguez"
        enabled:
          type: boolean
          description: Estado de la cuenta (activa/inactiva)
          example: true

    AddressRequest:
      type: object
      required:
        - street
        - city
        - country
      properties:
        street:
          type: string
          description: Calle y número
          example: "Calle Principal 123"
        city:
          type: string
          description: Ciudad
          example: "Ciudad de Guatemala"
        state:
          type: string
          description: Estado o provincia
          example: "Guatemala"
        country:
          type: string
          description: País
          example: "Guatemala"
        zipCode:
          type: string
          description: Código postal
          example: "01001"
        isDefault:
          type: boolean
          description: Indica si es la dirección predeterminada
          example: true
        label:
          type: string
          description: Etiqueta para identificar la dirección
          example: "Casa"

    PhoneRequest:
      type: object
      required:
        - number
      properties:
        number:
          type: string
          description: Número de teléfono
          example: "55123456"
        countryCode:
          type: string
          description: Código de país
          example: "+502"
        type:
          type: string
          description: Tipo de teléfono
          enum: [MOBILE, HOME, WORK, OTHER]
          example: "MOBILE"
        isDefault:
          type: boolean
          description: Indica si es el número predeterminado
          example: true

    RoleRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Nombre del rol
          example: "EDITOR"
        description:
          type: string
          description: Descripción del rol
          example: "Editor de contenido"

    ChangePasswordRequest:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          description: Contraseña actual
          format: password
          example: "ContraseñaActual123!"
        newPassword:
          type: string
          description: Nueva contraseña
          format: password
          example: "NuevaContraseña456!"
          minLength: 8

    PasswordResetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Correo electrónico del usuario
          format: email
          example: "usuario@ejemplo.com"

    PasswordResetConfirmRequest:
      type: object
      required:
        - token
        - newPassword
      properties:
        token:
          type: string
          description: Token de restablecimiento recibido por correo electrónico
          example: "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6"
        newPassword:
          type: string
          description: Nueva contraseña
          format: password
          example: "NuevaContraseña456!"
          minLength: 8

    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del usuario
          example: "123e4567-e89b-12d3-a456-426614174000"
        username:
          type: string
          description: Nombre de usuario
          example: "usuario123"
        email:
          type: string
          description: Correo electrónico
          example: "usuario@ejemplo.com"
        firstName:
          type: string
          description: Nombre
          example: "Juan"
        lastName:
          type: string
          description: Apellidos
          example: "Pérez García"
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento
          example: "1990-01-01"
        enabled:
          type: boolean
          description: Estado de la cuenta
          example: true
        roles:
          type: array
          description: Roles asignados
          items:
            $ref: '#/components/schemas/RoleResponse'
        addresses:
          type: array
          description: Direcciones de envío
          items:
            $ref: '#/components/schemas/AddressResponse'
        phoneNumbers:
          type: array
          description: Números de teléfono
          items:
            $ref: '#/components/schemas/PhoneResponse'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2023-01-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
          example: "2023-01-15T14:30:00Z"

    AddressResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único de la dirección
          example: "123e4567-e89b-12d3-a456-426614174000"
        street:
          type: string
          description: Calle y número
          example: "Calle Principal 123"
        city:
          type: string
          description: Ciudad
          example: "Ciudad de Guatemala"
        state:
          type: string
          description: Estado o provincia
          example: "Guatemala"
        country:
          type: string
          description: País
          example: "Guatemala"
        zipCode:
          type: string
          description: Código postal
          example: "01001"
        isDefault:
          type: boolean
          description: Indica si es la dirección predeterminada
          example: true
        label:
          type: string
          description: Etiqueta para identificar la dirección
          example: "Casa"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2023-01-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
          example: "2023-01-15T14:30:00Z"

    PhoneResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del número de teléfono
          example: "123e4567-e89b-12d3-a456-426614174000"
        number:
          type: string
          description: Número de teléfono
          example: "55123456"
        countryCode:
          type: string
          description: Código de país
          example: "+502"
        type:
          type: string
          description: Tipo de teléfono
          enum: [MOBILE, HOME, WORK, OTHER]
          example: "MOBILE"
        isDefault:
          type: boolean
          description: Indica si es el número predeterminado
          example: true
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2023-01-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
          example: "2023-01-15T14:30:00Z"

    RoleResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del rol
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Nombre del rol
          example: "ADMIN"
        description:
          type: string
          description: Descripción del rol
          example: "Administrador del sistema"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2023-01-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
          example: "2023-01-15T14:30:00Z"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de error
          example: "Error en la solicitud"
        details:
          type: array
          description: Detalles del error
          items:
            type: string
          example: ["El campo 'email' debe ser un correo electrónico válido"]
        timestamp:
          type: string
          format: date-time
          description: Fecha y hora del error
          example: "2023-01-01T12:00:00Z"

  responses:
    Unauthorized:
      description: No autorizado - Se requiere autenticación
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Prohibido - No tiene permisos para acceder al recurso
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT de autenticación
